'use strict'

/*
1. Объясните почему код даёт именно такие результаты?
*/

//пример 1
let a = 1, b = 1, c, d
c = ++a

// ответ: 2, т.к. унарный плюс увеличивает на единицу значение переменной а
// и это значение присваивается переменной с
alert(c)



//пример 2
d = b++

//ответ: 1, т.к. сначала переменной d присваивается значение b, равное 1, а потом
//постфиксный унарный плюс увеличивает значение переменной b на 1 (т.е. b = 2)
alert(d)



//пример 3

//ответ: 5, т.к. унарный плюс увеличивает значение переменной а на 1 (а = 3)
//2 + 3 = 5
c = 2 + ++a
alert(c)



//пример 4
d = 2 + b++

//ответ: 4, т.к. 2 + 2 = 5, унарный постфиксный плюс увеличивает значение переменной b после еще на 1 (b = 3)
alert(d)


//3, т.к. к обоим переменным унарный плюс был применен дважды
alert(a)
alert(b)

//=====================================================

/*
2. Чему будут равны переменные x и y в примере ниже?
Написать почему так произошло (описать последовательность действий).
*/

let y = 2
let x = 1 + (y *= 2)

// x = 5, y = 4, т.к. сначала по приоритету происходят действия в скобках (y = y * 2, т.е. 4)
// 1 + 4 = 5
console.log(x, y)

//=====================================================

/*
3. Объявить две целочисленные переменные v и w и задать им произвольные начальные значения.
Затем написать скрипт, который работает по следующему принципу:
  если v и w положительные, вывести их разность;
  если v и w отрицательные, вывести их произведение;
  если v и w разных знаков, вывести их сумму; ноль можно считать положительным числом.
*/

let v = +prompt('Введите целое число v', '0')
let w = +prompt('Введите целое число w', '0')

if (v >= 0 && v >= 0) {
  console.log(v - w)
} else if (v < 0 && w < 0) {
  console.log(v * w)
} else {
  console.log(v + w)
}

//=====================================================

/*
4. Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя параметрами.
Т.е. например, функция для сложения должна принимать два числа, складывать их и возвращать результат.
Обязательно использовать оператор return.
*/

/**
 * Функция считаем сумму двух чисел
 * @param {number} arg1 число 1
 * @param {number} arg2 число 2
 * @returns {number} сумма чисел 1 и 2
 */
function sum (arg1, arg2) {
  return arg1 + arg2
}

/**
 * Функция считает разность двух чисел
 * @param {number} arg1 число 1
 * @param {number} arg2 число 2
 * @returns {number} разность чисел 1 и 2
 */
function difference (arg1, arg2) {
  return arg1 - arg2
}

/**
 * Функция произведение разность двух чисел
 * @param {number} arg1 число 1
 * @param {number} arg2 число 2
 * @returns {number} произведение чисел 1 и 2
 */
function multiplication (arg1, arg2) {
  return arg1 * arg2
}

/**
 * Функция считает частное двух чисел
 * @param {number} arg1 число 1
 * @param {number} arg2 число 2
 * @returns {number} частное чисел 1 и 2
 */
function division (arg1, arg2) {
  return arg1 / arg2
}


//=====================================================

/*
5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции.
В зависимости от переданного значения операции (использовать switch)
выполнить одну из арифметических операций (использовать функции из задания 4)
и вернуть полученное значение.
*/

let arg1 = +prompt('Введите любое число a', '0')
let arg2 = +prompt('Введите любое число b', '0')
let operation = prompt('Введите желаемую операцию с числами: +, -, *, /. Результат выводится в консоль')

/**
 * Функция возвращает сумму, разность, произведение или частное в зависимости от желаемой операции
 * @param arg1 число 1
 * @param arg2 число 2
 * @param operation математическая операция
 * @returns {number} результат вычисления
 */
function mathOperation (arg1, arg2, operation) {
  switch (operation) {
    case '+':
      return sum(arg1, arg2)
    case '-':
      return difference(arg1, arg2)
    case '*':
      return multiplication(arg1, arg2)
    case '/':
      return division(arg1, arg2)
    default:
      alert('Операция введена некорректно')
  }
}

let simpleMath = mathOperation(arg1,arg2,operation)
console.log(`a = ${arg1}, b = ${arg2} операция: ${operation}, результат: `, simpleMath)

//=====================================================

/*
Программа должна спросить у пользователя число, это будет количество денег, которое он хочет положить на счет в банке. Затем программа должна выдать примерно такое сообщение:
"Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101.
"Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020.
"Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
То есть ваша задача выводить слово «рубль» в правильном падеже, в зависимости от введенного числа.
*/

let amountCredited = prompt('Введите сумму денег, которое Вы хотите положить на счет.')
let valueAmountCredited = amountCredited
amountCredited = parseInt(amountCredited)

if (!isNaN(amountCredited)) {
  alert(`Ваша сумма ${amountCredited} ${getCase(amountCredited)} успешно зачислена.`)
} else {
  alert(`Вы ввели не число: ${valueAmountCredited}`)
}

/**
 * Функция возвращает в нужном падеже название валюты
 * @param Credited сумма зачисления
 * @returns {string} рублей/рубль/рубля
 */
function getCase(Credited) {
  let penultimateDigit = getPenultimateDigit(Credited)

  if (penultimateDigit == 1) {
    return "рублей"
  }

  Credited = String(Credited)

  let lastDigit = +(Credited.charAt(Credited.length - 1))

  switch (lastDigit) {
    case 0:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return "рублей"
    case 1:
      return "рубль"
    case 2:
    case 3:
    case 4:
      return "рубля"
  }
}

/**
 * Функция возвращает предпоследнюю цифру числа или предупреждение
 * @param {number} число
 * @returns {(number|string)} предпоследняя цифра или предупреждение
 */
function getPenultimateDigit(Credited) {
  Credited = String(Credited)

  let digit = Credited.charAt(Credited.length - 2)

  if (digit !== '') {
    return +digit
  }

  return null
}